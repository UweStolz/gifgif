// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search.vue renders properly 1`] = `
<v-container-stub
  fluid="true"
  tag="div"
>
  <dialog-stub
    fullimagedata=""
    imageid=""
    previewimagedata=""
  />
   
  <v-row-stub
    align="start"
    justify="center"
    tag="div"
  >
    <v-card-stub
      flat="true"
      loaderheight="4"
      tag="div"
      tile="true"
      width="80%"
    >
      <v-slide-y-transition-stub
        mode="out-in"
        origin="top center 0"
      >
        <v-card-stub
          flat="true"
          id="s-filterCard"
          loaderheight="4"
          style="display: none;"
          tag="div"
          tile="true"
        >
          <v-overflow-btn-stub
            allowoverflow="true"
            appendicon="$dropdown"
            backgroundcolor=""
            clearable="true"
            clearicon="$clear"
            errorcount="1"
            errormessages=""
            filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }"
            itemcolor="primary"
            itemdisabled="disabled"
            items="[object Object],[object Object],[object Object],[object Object]"
            itemtext="text"
            itemvalue="value"
            label="Rating"
            loaderheight="2"
            menuprops="[object Object]"
            messages=""
            nodatatext="$vuetify.noDataText"
            rules=""
            successmessages=""
            target="#s-filterCard"
            type="text"
            value=""
            valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date && b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}"
          />
        </v-card-stub>
      </v-slide-y-transition-stub>
       
      <v-combobox-stub
        allowoverflow="true"
        appendicon="$dropdown"
        backgroundcolor=""
        cacheitems="true"
        chips="true"
        clearable="true"
        clearicon="$clear"
        color="red darken-3"
        deletablechips="true"
        delimiters=""
        errorcount="1"
        errormessages=""
        filter="function _default(item, queryText, itemText) {
        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;
      }"
        hidenodata="true"
        hint="A minimum of 3 characters is required"
        itemcolor="primary"
        itemdisabled="disabled"
        items=""
        itemtext="text"
        itemvalue="value"
        label="GIF search"
        loaderheight="2"
        menuprops="[object Object]"
        messages=""
        nodatatext="$vuetify.noDataText"
        persistenthint="true"
        placeholder="Enter or select a search tag"
        prependicon="M15.5,2C18,2 20,4 20,6.5C20,7.38 19.75,8.21 19.31,8.9L22.39,12L21,13.39L17.88,10.32C17.19,10.75 16.37,11 15.5,11C13,11 11,9 11,6.5C11,4 13,2 15.5,2M15.5,4A2.5,2.5 0 0,0 13,6.5A2.5,2.5 0 0,0 15.5,9A2.5,2.5 0 0,0 18,6.5A2.5,2.5 0 0,0 15.5,4M7.5,14.5L4,19H18L13.5,13L10,17.5L7.5,14.5M20,20A2,2 0 0,1 18,22H4A2,2 0 0,1 2,20V6A2,2 0 0,1 4,4H9.5C9.18,4.77 9,5.61 9,6.5A6.5,6.5 0 0,0 15.5,13C16.18,13 16.84,12.89 17.46,12.7L20,15.24V20Z"
        returnobject="true"
        rules=""
        searchinput=""
        successmessages=""
        type="text"
        valuecomparator="function deepEqual(a, b) {
  if (a === b) return true;

  if (a instanceof Date && b instanceof Date) {
    // If the values are Date, they were convert to timestamp with getTime and compare it
    if (a.getTime() !== b.getTime()) return false;
  }

  if (a !== Object(a) || b !== Object(b)) {
    // If the values aren't objects, they were already checked for equality
    return false;
  }

  var props = Object.keys(a);

  if (props.length !== Object.keys(b).length) {
    // Different number of props, don't bother to check
    return false;
  }

  return props.every(function (p) {
    return deepEqual(a[p], b[p]);
  });
}"
      />
       
      <v-divider-stub />
       
      <v-expand-transition-stub
        mode="in-out"
      >
        <!---->
      </v-expand-transition-stub>
    </v-card-stub>
  </v-row-stub>
</v-container-stub>
`;
